{"version":3,"sources":["utils/reportPerf.js","utils/index.js","constants/performance.js","utils/reportError.js","index.js","components/Loading/index.js","hoc/lazyLoad.js","router/routes.js","layout/components/PerformancePanel.js","layout/components/ErrorPanel.js","layout/index.js","layout/components/Navigation.js","router/index.js","models/performance.js","models/error.js","App.js","utils/math.js"],"names":["wv","WebVitals","appId","version","immediately","reportCallback","metrics","store","app","_store","data","name","value","dispatch","type","payload","needCCP","logFpsCount","hashHistory","os","ua","navigator","userAgent","isWindowsPhone","test","isSymbian","isAndroid","isFireFox","isTablet","isPhone","isPc","determineMinMax","metricScoring","valueAtScore100","VALUE_AT_QUANTILE","valueAtScore5","min","Math","floor","max","ceil","step","units","metricsConfig","fcp","mobile","weight","median","p10","pc","act","ccp","init","dsn","maxBreadcrumbs","beforePushBreadcrumb","breadcrumb","time","Date","ReactDOM","render","App","document","getElementById","Loading","useEffect","customContentfulPaint","className","LazyLoad","Component","DynamicComponent","React","lazy","props","fallback","routes","title","exact","path","component","lazyLoad","Content","Layout","Header","metricsMap","fps","columns","dataIndex","key","ExpandableItem","contentStyle","size","isNaN","Number","Array","isArray","map","item","i","bordered","Object","entries","JSON","parse","stringify","val","Item","label","ExpandableRender","backgroundColor","connect","performance","dataSource","useMemo","metricsItems","sectionId","timestamp","describe","format","pagination","sticky","expandable","expandedRowRender","record","category","cls","user","http","exception","debug","level","color","isString","actionItems","error","Main","children","href","target","rel","split","minSize","defaultSize","maxSize","pane2Style","overflow","Navigation","wrapRef","useRef","barRefs","history","useHistory","location","useLocation","useState","barStyle","setBarStyle","handleNavi","useCallback","route","push","current","wrapOffsetX","getBoundingClientRect","x","activeTab","find","tab","id","pathname","deltaX","width","clientWidth","transform","ref","el","onClick","style","AppRouter","namespace","state","scores","reducers","addMetrics","concat","calcScore","effectiveType","replace","score","QUANTILE_AT_VALUE","toFixed","effects","addItem","dva","createHashHistory","modelsKey","models","model","router","start","podr","derivePodrFromP10","log","logRatio","shape","sqrt","sign","t","abs","exp","internalErf_","SQRT2","quantile","log1x","p1","PI","sqrtP1Log","internalErfInv_","u","inner1"],"mappings":"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","file":"static/js/main.88821d88.chunk.js","sourcesContent":["import { WebVitals } from '@zyf2e/monitor-web-performance'\nimport { app } from 'src/App'\n\nconst wv = new WebVitals({\n    appId: 'monitor-demo',\n    version: '1.0.0',\n    immediately: true,\n    reportCallback: (metrics) => {\n        const store = app._store\n\n        const {\n            data: { name, value },\n        } = metrics\n\n        if (name === 'first-contentful-paint' || name === 'api-complete-time' || name === 'custom-contentful-paint') {\n            store.dispatch({\n                type: 'performance/calcScore',\n                payload: {\n                    name,\n                    value,\n                },\n            })\n        }\n\n        store.dispatch({\n            type: 'performance/addMetrics',\n            payload: metrics,\n        })\n    },\n    needCCP: true,\n    logFpsCount: 20,\n    hashHistory: true,\n})\n\nexport default wv\n","import { VALUE_AT_QUANTILE } from './math'\n\nconst os = (function () {\n    const ua = navigator.userAgent\n\n    const isWindowsPhone = /(?:Windows Phone)/.test(ua),\n        isSymbian = /(?:SymbianOS)/.test(ua) || isWindowsPhone,\n        isAndroid = /(?:Android)/.test(ua),\n        isFireFox = /(?:Firefox)/.test(ua),\n        isTablet =\n            /(?:iPad|PlayBook)/.test(ua) ||\n            (isAndroid && !/(?:Mobile)/.test(ua)) ||\n            (isFireFox && /(?:Tablet)/.test(ua)),\n        isPhone = /(?:iPhone)/.test(ua) && !isTablet,\n        isPc = !isPhone && !isAndroid && !isSymbian\n    return {\n        isTablet: isTablet,\n        isPhone: isPhone,\n        isAndroid: isAndroid,\n        isPc: isPc,\n    }\n})()\n\nfunction determineMinMax(metricScoring) {\n    const valueAtScore100 = VALUE_AT_QUANTILE(metricScoring, 0.995)\n    const valueAtScore5 = VALUE_AT_QUANTILE(metricScoring, 0.05)\n\n    let min = Math.floor(valueAtScore100 / 1000) * 1000\n    let max = Math.ceil(valueAtScore5 / 1000) * 1000\n    let step = 10\n\n    // Special handling for CLS\n    if (metricScoring.units === 'unitless') {\n        min = 0\n        max = Math.ceil(valueAtScore5 * 100) / 100\n        step = 0.01\n    }\n\n    return {\n        min,\n        max,\n        step,\n    }\n}\n\nexport { os, determineMinMax }\n","const metricsConfig = {\n    fcp: {\n        '4g': {\n            mobile: {\n                weight: 0.3,\n                median: 4500,\n                p10: 1500,\n            },\n            pc: {\n                weight: 0.3,\n                median: 4000,\n                p10: 1000,\n            },\n        },\n        '3g': {\n            mobile: {\n                weight: 0.3,\n                median: 6000,\n                p10: 3000,\n            },\n            pc: {\n                weight: 0.3,\n                median: 6000,\n                p10: 2500,\n            },\n        },\n    },\n    act: {\n        '4g': {\n            mobile: {\n                weight: 0.3,\n                median: 6500,\n                p10: 2500,\n            },\n            pc: {\n                weight: 0.3,\n                median: 6000,\n                p10: 2000,\n            },\n        },\n        '3g': {\n            mobile: {\n                weight: 0.3,\n                median: 8000,\n                p10: 4000,\n            },\n            pc: {\n                weight: 0.3,\n                median: 7500,\n                p10: 3500,\n            },\n        },\n    },\n    ccp: {\n        '4g': {\n            mobile: {\n                weight: 0.4,\n                median: 7500,\n                p10: 3500,\n            },\n            pc: {\n                weight: 0.4,\n                median: 7000,\n                p10: 3000,\n            },\n        },\n        '3g': {\n            mobile: {\n                weight: 0.4,\n                median: 9000,\n                p10: 5000,\n            },\n            pc: {\n                weight: 0.4,\n                median: 8500,\n                p10: 4500,\n            },\n        },\n    },\n}\n\nexport default metricsConfig\n","import { init } from '@zyf2e/monitor-web'\nimport { app } from 'src/App'\n\ninit({\n    dsn: 'https://chryseis.com/api',\n    maxBreadcrumbs: 100,\n    beforePushBreadcrumb(breadcrumb, data) {\n        app._store.dispatch({\n            type: 'error/addItem',\n            payload: { ...data, time: +new Date() },\n        })\n    },\n})\n","import './index.less'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'src/utils/reportPerf'\nimport 'src/utils/reportError'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","import { useEffect } from 'react'\nimport { Skeleton } from 'antd'\nimport wv from 'src/utils/reportPerf'\n\nfunction Loading() {\n    useEffect(() => {\n        return () => {\n            wv.customContentfulPaint()\n        }\n    }, [])\n\n    return (\n        <div className='flex-1 p-5'>\n            <Skeleton />\n        </div>\n    )\n}\n\nexport default Loading\n","import React, { Suspense } from 'react'\nimport Loading from 'src/components/Loading'\n\nconst LazyLoad = (Component) => {\n    const DynamicComponent = React.lazy(Component)\n\n    return (props) => (\n        <Suspense fallback={<Loading />}>\n            <DynamicComponent {...props} />\n        </Suspense>\n    )\n}\n\nexport default LazyLoad\n","import lazyLoad from 'src/hoc/lazyLoad'\n\nconst routes = [\n    {\n        title: 'Performance',\n        exact: true,\n        path: '/',\n        component: lazyLoad(() => import(/* webpackChunkName:'p_performance' */ '../pages/performance')),\n    },\n    {\n        title: 'Error',\n        exact: true,\n        path: '/error',\n        component: lazyLoad(() => import(/* webpackChunkName:'p_error' */ '../pages/error')),\n    },\n    {\n        title: 'Calculator',\n        exact: true,\n        path: '/calculator',\n        component: lazyLoad(() => import(/* webpackChunkName:'p_calculator' */ '../pages/calculator')),\n    },\n    {\n        title: 'Example',\n        exact: true,\n        path: '/example',\n        component: lazyLoad(() => import(/* webpackChunkName:'p_example' */ '../pages/example')),\n    },\n]\n\nexport default routes\n","import { useMemo } from 'react'\nimport { Table, Layout, Descriptions } from 'antd'\nimport { connect } from 'dva'\nimport format from 'date-fns/format'\n\nconst { Content, Header } = Layout\n\nconst metricsMap = {\n    'page-information': '页面信息',\n    'network-information': '网络信息',\n    'device-information': '设备信息',\n    'navigation-timing': '导航加载时间',\n    'first-paint': '第一个像素渲染时间',\n    'first-contentful-paint': '第一个元素渲染时间',\n    'first-input-delay': '用户第一次输入延迟',\n    'largest-contentful-paint': '最大元素渲染时间',\n    'custom-contentful-paint': '页面完成时渲染时间',\n    fps: '页面刷新率',\n    'api-complete-time': '首屏接口请求完成时间',\n    'resource-flow': '资源加载列表',\n    'cumulative-layout-shift': '页面意外位移量',\n}\n\nconst columns = [\n    {\n        title: '指标',\n        dataIndex: 'metrics',\n        key: 'metrics',\n    },\n    {\n        title: '描述',\n        dataIndex: 'describe',\n        key: 'describe',\n    },\n    {\n        title: '会话id',\n        dataIndex: 'sectionId',\n        key: 'sectionId',\n    },\n    {\n        title: '上报时间',\n        dataIndex: 'time',\n        key: 'time',\n    },\n]\n\nfunction ExpandableItem({ data, contentStyle, size }) {\n    if (!isNaN(Number(data))) {\n        return (\n            <Descriptions bordered contentStyle={contentStyle} size={size}>\n                <Descriptions.Item label='value'>{data}</Descriptions.Item>\n            </Descriptions>\n        )\n    } else if (Array.isArray(data)) {\n        return data.map((item, i) => (\n            <Descriptions\n                className='mb-5'\n                key={i}\n                bordered\n                contentStyle={contentStyle}\n                size={size}\n                title={`resource-${i + 1}`}\n            >\n                {Object.entries(JSON.parse(JSON.stringify(item))).map(([key, val]) => (\n                    <Descriptions.Item label={key} key={key}>\n                        {val}\n                    </Descriptions.Item>\n                ))}\n            </Descriptions>\n        ))\n    } else {\n        return (\n            <Descriptions bordered contentStyle={contentStyle} size={size}>\n                {Object.entries(data).map(([key, val]) => (\n                    <Descriptions.Item label={key} key={key}>\n                        {val}\n                    </Descriptions.Item>\n                ))}\n            </Descriptions>\n        )\n    }\n}\n\nfunction ExpandableRender({ name, value }) {\n    return <ExpandableItem name={name} data={value} contentStyle={{ backgroundColor: '#fff' }} size='small' />\n}\n\nfunction PerformancePanel({ performance }) {\n    const dataSource = useMemo(() => {\n        const { metricsItems } = performance\n        return metricsItems.map((item, i) => {\n            const {\n                sectionId,\n                appId,\n                data: { name, value },\n                timestamp,\n            } = item\n\n            const describe = metricsMap[name]\n\n            return {\n                key: i,\n                appId,\n                sectionId,\n                metrics: name,\n                describe,\n                value,\n                time: format(timestamp, 'yyyy-MM-dd HH:mm:ss'),\n            }\n        })\n    }, [performance])\n\n    return (\n        <Content className='flex flex-col w-full'>\n            <Header className='flex items-center text-white text-2xl bg-blue-200 shadow-sm'>Performance Metrics</Header>\n            <div className='flex-1 overflow-auto'>\n                <Table\n                    pagination={false}\n                    columns={columns}\n                    dataSource={dataSource}\n                    sticky\n                    expandable={{\n                        expandedRowRender: (record) => <ExpandableRender {...record} />,\n                    }}\n                />\n            </div>\n        </Content>\n    )\n}\n\nexport default connect(({ performance }) => {\n    return {\n        performance,\n    }\n})(PerformancePanel)\n","import { useMemo } from 'react'\nimport { Table, Layout, Tag, Descriptions } from 'antd'\nimport cls from 'classnames'\nimport { connect } from 'dva'\nimport format from 'date-fns/format'\nimport { isString } from '@craco/craco/lib/utils'\n\nconst { Header, Content } = Layout\n\nconst columns = [\n    {\n        title: '类别',\n        dataIndex: 'category',\n        key: 'category',\n        render: (category) => {\n            const iconMap = {\n                user: 'icon-actions',\n                http: 'icon-http',\n                exception: 'icon-Exception',\n                debug: 'icon-debug',\n            }\n\n            return <i className={cls('icon', 'iconfont', iconMap[category], 'text-xl')} />\n        },\n    },\n    {\n        title: '类型',\n        dataIndex: 'type',\n        key: 'type',\n    },\n    {\n        title: '等级',\n        dataIndex: 'level',\n        key: 'level',\n        render: (level) => <Tag color='#93C5FD'>{level}</Tag>,\n    },\n    {\n        title: '时间',\n        dataIndex: 'time',\n        key: 'time',\n    },\n]\n\nfunction ExpandableItem({ data, contentStyle, size }) {\n    if (isString(data)) {\n        return (\n            <Descriptions bordered contentStyle={contentStyle} size={size}>\n                <Descriptions.Item label='value'>{data}</Descriptions.Item>\n            </Descriptions>\n        )\n    } else {\n        return (\n            <Descriptions bordered contentStyle={contentStyle} size={size}>\n                {Object.entries(data).map(([key, val]) => (\n                    <Descriptions.Item label={key} key={key}>\n                        {JSON.stringify(val)}\n                    </Descriptions.Item>\n                ))}\n            </Descriptions>\n        )\n    }\n}\n\nfunction ExpandableRender({ data }) {\n    return <ExpandableItem data={data} contentStyle={{ backgroundColor: '#fff' }} size='small' />\n}\n\nfunction ErrorPanel({ actionItems }) {\n    const dataSource = useMemo(() => {\n        return actionItems.map((item, i) => {\n            const { type, category, data, level, time } = item\n\n            return {\n                key: i,\n                type,\n                category,\n                level,\n                time: format(time, 'yyyy-MM-dd HH:mm:ss'),\n                data,\n            }\n        })\n    }, [actionItems])\n\n    return (\n        <Content className='flex flex-col w-full h-full '>\n            <Header className='flex items-center text-white text-2xl bg-blue-200 shadow-sm'>Action List</Header>\n            <div className='flex-1 overflow-auto'>\n                <Table\n                    pagination={false}\n                    columns={columns}\n                    dataSource={dataSource}\n                    sticky\n                    expandable={{\n                        expandedRowRender: (record) => <ExpandableRender {...record} />,\n                    }}\n                />\n            </div>\n        </Content>\n    )\n}\n\nexport default connect(({ error }) => {\n    const { actionItems } = error\n    return { actionItems }\n})(ErrorPanel)\n","import './index.less'\nimport React from 'react'\nimport { Layout } from 'antd'\nimport SplitPane from 'react-split-pane'\nimport PerformancePanel from './components/PerformancePanel'\nimport ErrorPanel from './components/ErrorPanel'\n\nconst { Header, Content } = Layout\n\nfunction Main({ children }) {\n    return (\n        <Layout className='flex flex-col h-screen dark'>\n            <Header className='flex items-center justify-between  h-16 px-5 text-2xl text-red-50 bg-blue-300 shadow-xl'>\n                <div>Monitor</div>\n                <a href='https://github.com/clouDr-f2e/monitor' target='_blank' rel='noreferrer'>\n                    <i className='icon iconfont icon-github-fill text-3xl' />\n                </a>\n            </Header>\n            <Layout className='relative flex flex-1 split-wrapper'>\n                <SplitPane split='vertical' minSize={200} defaultSize={'40%'}>\n                    <Content className='h-full rounded-l-md bg-white split-wrapper'>\n                        <SplitPane\n                            split='horizontal'\n                            minSize={300}\n                            maxSize={600}\n                            defaultSize={'50%'}\n                            pane2Style={{ overflow: 'hidden' }}\n                        >\n                            <PerformancePanel />\n                            <ErrorPanel />\n                        </SplitPane>\n                    </Content>\n                    <Content className='flex flex-col h-full rounded-r-md bg-white'>{children}</Content>\n                </SplitPane>\n            </Layout>\n        </Layout>\n    )\n}\n\nexport default Main\n","import { useEffect, useCallback, useRef, useState } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport cls from 'classnames'\nimport routes from 'src/router/routes'\n\nfunction Navigation() {\n    const wrapRef = useRef(null)\n    const barRefs = useRef([])\n    const history = useHistory()\n    const location = useLocation()\n    const [barStyle, setBarStyle] = useState({})\n\n    const handleNavi = useCallback(\n        (route) => {\n            history.push(route.path)\n        },\n        [history]\n    )\n\n    useEffect(() => {\n        if (wrapRef.current) {\n            const wrapOffsetX = wrapRef.current.getBoundingClientRect().x\n            const activeTab = barRefs.current.find((tab) => tab.id === location.pathname)\n            if (activeTab) {\n                const deltaX = activeTab.getBoundingClientRect().x - wrapOffsetX\n                setBarStyle({ width: activeTab.clientWidth + 'px', transform: `translate3d(${deltaX}px,0px,0px)` })\n            }\n        }\n    }, [location.pathname])\n\n    return (\n        <div className='relative flex items-center h-16 shadow-sm' ref={wrapRef}>\n            {routes.map((route, i) => (\n                <div\n                    ref={(el) => (barRefs.current[i] = el)}\n                    id={route.path}\n                    className={cls(\n                        'px-3 py-2',\n                        'text-xl',\n                        {\n                            'text-blue-300': location.pathname === route.path,\n                            'text-gray-800': location.pathname !== route.path,\n                        },\n                        'cursor-pointer',\n                        'hover:text-blue-300'\n                    )}\n                    key={route.path}\n                    onClick={() => handleNavi(route)}\n                >\n                    {route.title}\n                </div>\n            ))}\n            <div\n                className='absolute z-10 left-0 bottom-0 h-0.5 bg-blue-300 transition-transform transition-all duration-200 ease-linear'\n                style={barStyle}\n            />\n            <div className='absolute left-0 bottom-0 w-full h-px bg-bg-gray-10' />\n        </div>\n    )\n}\n\nexport default Navigation\n","import routes from './routes'\nimport { Router, Switch, Route } from 'react-router'\nimport Main from 'src/layout'\nimport Navigation from 'src/layout/components/Navigation'\n\nfunction AppRouter({ history }) {\n    return (\n        <>\n            <Main>\n                <Router history={history}>\n                    <Navigation />\n                    <Switch>\n                        {routes.map((route) => (\n                            <Route key={route.path} {...route} />\n                        ))}\n                        <Route component={() => <div>404</div>} />\n                    </Switch>\n                </Router>\n            </Main>\n        </>\n    )\n}\n\nexport default AppRouter\n","import { QUANTILE_AT_VALUE } from 'src/utils/math'\nimport metricsConfig from 'src/constants/performance'\nimport { os } from 'src/utils'\n\nconst performance = {\n    namespace: 'performance',\n    state: {\n        metricsItems: [],\n        scores: [],\n    },\n    reducers: {\n        addMetrics(state, { payload }) {\n            return {\n                ...state,\n                metricsItems: state.metricsItems.concat(payload),\n            }\n        },\n        calcScore(state, { payload }) {\n            const { name, value } = payload\n\n            const {\n                data: {\n                    value: { effectiveType },\n                },\n            } = state.metricsItems.find((item) => item.data.name === 'network-information')\n\n            const { median, p10, weight } =\n                metricsConfig[name.replace(/(-|)([a-z])[a-z]*/g, '$2')][effectiveType][os.isPc ? 'pc' : 'mobile']\n\n            const score = (QUANTILE_AT_VALUE({ median, p10 }, value) * 100).toFixed(2)\n\n            return {\n                ...state,\n                scores: state.scores.concat({\n                    title: name,\n                    score,\n                    value,\n                    weight,\n                    key: name,\n                }),\n            }\n        },\n    },\n    effects: {},\n}\n\nexport default performance\n","const error = {\n    namespace: 'error',\n    state: {\n        actionItems: [],\n    },\n    reducers: {\n        addItem(state, { payload }) {\n            return {\n                actionItems: state.actionItems.concat(payload),\n            }\n        },\n    },\n}\n\nexport default error\n","import dva from 'dva'\nimport { createHashHistory } from 'history'\nimport './App.less'\nimport AppRouter from 'src/router'\nimport * as models from 'src/models'\n\nconst app = dva({\n    history: createHashHistory(),\n})\n\nfor (let modelsKey in models) {\n    app.model(models[modelsKey])\n}\n\napp.router(AppRouter)\n\nconst App = app.start()\n\nexport default App\n\nexport { app }\n","/**\n * Approximates the Gauss error function, the probability that a random variable\n * from the standard normal distribution lies within [-x, x]. Moved from\n * traceviewer.b.math.erf, based on Abramowitz and Stegun, formula 7.1.26.\n * @param {number} x\n * @return {number}\n */\nfunction internalErf_(x) {\n    // erf(-x) = -erf(x);\n    const sign = x < 0 ? -1 : 1\n    x = Math.abs(x)\n\n    const a1 = 0.254829592\n    const a2 = -0.284496736\n    const a3 = 1.421413741\n    const a4 = -1.453152027\n    const a5 = 1.061405429\n    const p = 0.3275911\n    const t = 1 / (1 + p * x)\n    const y = t * (a1 + t * (a2 + t * (a3 + t * (a4 + t * a5))))\n    return sign * (1 - y * Math.exp(-x * x))\n}\n\n/**\n * Creates a log-normal distribution and finds the complementary\n * quantile (1-percentile) of that distribution at value. All\n * arguments should be in the same units (e.g. milliseconds).\n *\n * @param {{median: number, podr?: number, p10?: number}} curve\n * @param {number} value\n * @return The complement of the quantile at value.\n * @customization\n */\nexport function QUANTILE_AT_VALUE({ median, podr, p10 }, value) {\n    if (!podr) {\n        podr = derivePodrFromP10(median, p10)\n    }\n\n    const location = Math.log(median)\n\n    // The \"podr\" value specified the location of the smaller of the positive\n    // roots of the third derivative of the log-normal CDF. Calculate the shape\n    // parameter in terms of that value and the median.\n    // See https://www.desmos.com/calculator/2t1ugwykrl\n    const logRatio = Math.log(podr / median)\n    const shape = Math.sqrt(1 - 3 * logRatio - Math.sqrt((logRatio - 3) * (logRatio - 3) - 8)) / 2\n\n    const standardizedX = (Math.log(value) - location) / (Math.SQRT2 * shape)\n    return (1 - internalErf_(standardizedX)) / 2\n}\n\n/**\n * Approximates the inverse error function. Based on Winitzki, \"A handy\n * approximation for the error function and its inverse\"\n * @param {number} x\n * @return {number}\n */\nfunction internalErfInv_(x) {\n    // erfinv(-x) = -erfinv(x);\n    const sign = x < 0 ? -1 : 1\n    const a = 0.147\n\n    const log1x = Math.log(1 - x * x)\n    const p1 = 2 / (Math.PI * a) + log1x / 2\n    const sqrtP1Log = Math.sqrt(p1 * p1 - log1x / a)\n    return sign * Math.sqrt(sqrtP1Log - p1)\n}\n\n/**\n * Calculates the value at the given quantile. Median, podr, and\n * expected value should all be in the same units (e.g. milliseconds).\n * quantile should be within [0,1].\n *\n * @param {{median: number, podr?: number, p10?: number}} curve\n * @return The value at this quantile.\n * @customization\n * @param quantile\n */\nexport function VALUE_AT_QUANTILE({ median, podr, p10 }, quantile) {\n    if (!podr) {\n        podr = derivePodrFromP10(median, p10)\n    }\n\n    const location = Math.log(median)\n    const logRatio = Math.log(podr / median)\n    const shape = Math.sqrt(1 - 3 * logRatio - Math.sqrt((logRatio - 3) * (logRatio - 3) - 8)) / 2\n\n    return Math.exp(location + shape * Math.SQRT2 * internalErfInv_(1 - 2 * quantile))\n}\n\n// https://www.desmos.com/calculator/oqlvmezbze\nfunction derivePodrFromP10(median, p10) {\n    const u = Math.log(median)\n    const shape = Math.abs(Math.log(p10) - u) / (Math.SQRT2 * 0.9061938024368232)\n    const inner1 = -3 * shape - Math.sqrt(4 + shape * shape)\n    return Math.exp(u + (shape / 2) * inner1)\n}\n"],"sourceRoot":""}