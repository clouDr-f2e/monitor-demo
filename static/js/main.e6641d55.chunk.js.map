{"version":3,"sources":["constants/performance.js","utils/reportPerf.js","utils/reportError.js","index.js","components/Loading/index.js","hoc/lazyLoad.js","router/routes.js","layout/components/PerformancePanel.js","layout/components/ErrorPanel.js","layout/index.js","layout/components/Navigation.js","router/index.js","models/performance.js","models/error.js","App.js"],"names":["metricsConfig","fcp","weight","median","p10","act","ccp","wv","WebVitals","appId","version","immediately","reportCallback","metrics","store","app","_store","console","log","data","name","value","score","dispatch","type","payload","isCustomEvent","logFpsCount","hashHistory","maxWaitCCPDuration","scoreConfig","init","dsn","maxBreadcrumbs","beforeAppAjaxSend","xhr","method","url","test","protocol","replace","window","location","error","content","className","beforePushBreadcrumb","breadcrumb","time","Date","ReactDOM","render","App","document","getElementById","Loading","useEffect","customContentfulPaint","LazyLoad","Component","DynamicComponent","React","lazy","props","fallback","routes","title","exact","path","component","lazyLoad","Content","Header","metricsMap","fps","columns","dataIndex","key","ExpandableItem","contentStyle","size","isNaN","Number","Array","isArray","map","item","i","bordered","Object","entries","JSON","parse","stringify","val","Item","label","ExpandableRender","backgroundColor","connect","performance","dataSource","useMemo","metricsItems","sectionId","timestamp","describe","format","pagination","sticky","expandable","expandedRowRender","record","category","cls","user","http","exception","debug","level","color","isString","actionItems","Main","children","href","target","rel","split","minSize","defaultSize","maxSize","pane2Style","overflow","Navigation","wrapRef","useRef","barRefs","history","useHistory","useLocation","useState","barStyle","setBarStyle","handleNavi","useCallback","route","push","current","wrapOffsetX","getBoundingClientRect","x","activeTab","find","tab","id","pathname","deltaX","width","clientWidth","transform","ref","el","onClick","style","AppRouter","namespace","state","scores","reducers","addMetrics","concat","calcScore","toFixed","effects","addItem","dva","createHashHistory","modelsKey","models","model","router","start"],"mappings":"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","file":"static/js/main.e6641d55.chunk.js","sourcesContent":["const metricsConfig = {\n    fcp: {\n        weight: 0.2,\n        median: 2500,\n        p10: 900,\n    },\n    act: {\n        weight: 0.3,\n        median: 2800,\n        p10: 1300,\n    },\n    ccp: {\n        weight: 0.5,\n        median: 3100,\n        p10: 1600,\n    },\n}\n\nexport default metricsConfig\n","import { WebVitals } from '@zyf2e/monitor-web-performance'\nimport { app } from 'src/App'\nimport metricsConfig from 'src/constants/performance'\n\nconst wv = new WebVitals({\n    appId: 'monitor-demo',\n    version: '1.0.0',\n    immediately: true,\n    reportCallback: (metrics) => {\n        const store = app._store\n\n        console.log('metrics', metrics)\n\n        const {\n            data: { name, value, score },\n        } = metrics\n\n        if (name === 'first-contentful-paint' || name === 'api-complete-time' || name === 'custom-contentful-paint') {\n            store.dispatch({\n                type: 'performance/calcScore',\n                payload: {\n                    name,\n                    value,\n                    score,\n                },\n            })\n        }\n\n        store.dispatch({\n            type: 'performance/addMetrics',\n            payload: metrics,\n        })\n    },\n    isCustomEvent: true,\n    logFpsCount: 20,\n    hashHistory: true,\n    maxWaitCCPDuration: 60 * 1000,\n    scoreConfig: metricsConfig,\n})\n\nexport default wv\n","import { message } from 'antd'\nimport { init } from '@zyf2e/monitor-web'\nimport { app } from 'src/App'\n\ninit({\n    dsn: 'https://chryseis.cn/api',\n    maxBreadcrumbs: 100,\n    beforeAppAjaxSend({ method, url }, xhr) {\n        if (/(http(?:s|):).*/.test(url)) {\n            const protocol = url.replace(/(http(?:s|):).*/, '$1')\n            if (window.location.protocol !== protocol) {\n                message.error({ content: '资源与站点协议不一致', className: 'monitor-message' })\n            }\n        }\n    },\n    beforePushBreadcrumb(breadcrumb, data) {\n        app._store.dispatch({\n            type: 'error/addItem',\n            payload: { ...data, time: +new Date() },\n        })\n    },\n})\n","import './index.less'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'src/utils/reportPerf'\nimport 'src/utils/reportError'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","import { useEffect } from 'react'\nimport { Skeleton } from 'antd'\nimport wv from 'src/utils/reportPerf'\n\nfunction Loading() {\n    useEffect(() => {\n        return () => {\n            wv.customContentfulPaint()\n        }\n    }, [])\n\n    return (\n        <div className='flex-1 p-5'>\n            <Skeleton />\n        </div>\n    )\n}\n\nexport default Loading\n","import React, { Suspense } from 'react'\nimport Loading from 'src/components/Loading'\n\nconst LazyLoad = (Component) => {\n    const DynamicComponent = React.lazy(Component)\n\n    return (props) => (\n        <Suspense fallback={<Loading />}>\n            <DynamicComponent {...props} />\n        </Suspense>\n    )\n}\n\nexport default LazyLoad\n","import lazyLoad from 'src/hoc/lazyLoad'\n\nconst routes = [\n    {\n        title: 'Performance',\n        exact: true,\n        path: '/',\n        component: lazyLoad(() => import(/* webpackChunkName:'p_performance' */ '../pages/performance')),\n    },\n    {\n        title: 'Error',\n        exact: true,\n        path: '/error',\n        component: lazyLoad(() => import(/* webpackChunkName:'p_error' */ '../pages/error')),\n    },\n    {\n        title: 'Calculator',\n        exact: true,\n        path: '/calculator',\n        component: lazyLoad(() => import(/* webpackChunkName:'p_calculator' */ '../pages/calculator')),\n    },\n    {\n        title: 'Example',\n        exact: true,\n        path: '/example',\n        component: lazyLoad(() => import(/* webpackChunkName:'p_example' */ '../pages/example')),\n    },\n]\n\nexport default routes\n","import { useMemo } from 'react'\nimport { Table, Layout, Descriptions } from 'antd'\nimport { connect } from 'dva'\nimport format from 'date-fns/format'\n\nconst { Content, Header } = Layout\n\nconst metricsMap = {\n    'page-information': '页面信息',\n    'network-information': '网络信息',\n    'device-information': '设备信息',\n    'navigation-timing': '导航加载时间',\n    'first-paint': '第一个像素渲染时间',\n    'first-contentful-paint': '第一个元素渲染时间',\n    'first-input-delay': '用户第一次输入延迟',\n    'largest-contentful-paint': '最大元素渲染时间',\n    'custom-contentful-paint': '页面完成时渲染时间',\n    fps: '页面刷新率',\n    'api-complete-time': '首屏接口请求完成时间',\n    'resource-flow': '资源加载列表',\n    'cumulative-layout-shift': '页面意外位移量',\n}\n\nconst columns = [\n    {\n        title: '指标',\n        dataIndex: 'metrics',\n        key: 'metrics',\n    },\n    {\n        title: '描述',\n        dataIndex: 'describe',\n        key: 'describe',\n    },\n    {\n        title: '会话id',\n        dataIndex: 'sectionId',\n        key: 'sectionId',\n    },\n    {\n        title: '上报时间',\n        dataIndex: 'time',\n        key: 'time',\n    },\n]\n\nfunction ExpandableItem({ data, contentStyle, size }) {\n    if (!isNaN(Number(data))) {\n        return (\n            <Descriptions bordered contentStyle={contentStyle} size={size}>\n                <Descriptions.Item label='value'>{data}</Descriptions.Item>\n            </Descriptions>\n        )\n    } else if (Array.isArray(data)) {\n        return data.map((item, i) => (\n            <Descriptions className='mb-5' key={i} bordered contentStyle={contentStyle} size={size} title={item.name}>\n                {Object.entries(JSON.parse(JSON.stringify(item))).map(([key, val]) => (\n                    <Descriptions.Item label={key} key={key}>\n                        {val}\n                    </Descriptions.Item>\n                ))}\n            </Descriptions>\n        ))\n    } else {\n        return (\n            <Descriptions bordered contentStyle={contentStyle} size={size}>\n                {Object.entries(data).map(([key, val]) => (\n                    <Descriptions.Item label={key} key={key}>\n                        {val}\n                    </Descriptions.Item>\n                ))}\n            </Descriptions>\n        )\n    }\n}\n\nfunction ExpandableRender({ name, value }) {\n    return <ExpandableItem name={name} data={value} contentStyle={{ backgroundColor: '#fff' }} size='small' />\n}\n\nfunction PerformancePanel({ performance }) {\n    const dataSource = useMemo(() => {\n        const { metricsItems } = performance\n        return metricsItems.map((item, i) => {\n            const {\n                sectionId,\n                appId,\n                data: { name, value },\n                timestamp,\n            } = item\n\n            const describe = metricsMap[name]\n\n            return {\n                key: i,\n                appId,\n                sectionId,\n                metrics: name,\n                describe,\n                value,\n                time: format(timestamp, 'yyyy-MM-dd HH:mm:ss'),\n            }\n        })\n    }, [performance])\n\n    return (\n        <Content className='flex flex-col w-full'>\n            <Header className='flex items-center text-white text-2xl bg-blue-200 shadow-sm'>Performance Metrics</Header>\n            <div className='flex-1 overflow-auto'>\n                <Table\n                    pagination={false}\n                    columns={columns}\n                    dataSource={dataSource}\n                    sticky\n                    expandable={{\n                        expandedRowRender: (record) => <ExpandableRender {...record} />,\n                    }}\n                />\n            </div>\n        </Content>\n    )\n}\n\nexport default connect(({ performance }) => {\n    return {\n        performance,\n    }\n})(PerformancePanel)\n","import { useMemo } from 'react'\nimport { Table, Layout, Tag, Descriptions } from 'antd'\nimport cls from 'classnames'\nimport { connect } from 'dva'\nimport format from 'date-fns/format'\nimport { isString } from '@craco/craco/lib/utils'\n\nconst { Header, Content } = Layout\n\nconst columns = [\n    {\n        title: '类别',\n        dataIndex: 'category',\n        key: 'category',\n        render: (category) => {\n            const iconMap = {\n                user: 'icon-actions',\n                http: 'icon-http',\n                exception: 'icon-Exception',\n                debug: 'icon-debug',\n            }\n\n            return <i className={cls('icon', 'iconfont', iconMap[category], 'text-xl')} />\n        },\n    },\n    {\n        title: '类型',\n        dataIndex: 'type',\n        key: 'type',\n    },\n    {\n        title: '等级',\n        dataIndex: 'level',\n        key: 'level',\n        render: (level) => <Tag color='#93C5FD'>{level}</Tag>,\n    },\n    {\n        title: '时间',\n        dataIndex: 'time',\n        key: 'time',\n    },\n]\n\nfunction ExpandableItem({ data, contentStyle, size }) {\n    if (isString(data)) {\n        return (\n            <Descriptions bordered contentStyle={contentStyle} size={size}>\n                <Descriptions.Item label='value'>{data}</Descriptions.Item>\n            </Descriptions>\n        )\n    } else {\n        return (\n            <Descriptions bordered contentStyle={contentStyle} size={size}>\n                {Object.entries(data).map(([key, val]) => (\n                    <Descriptions.Item label={key} key={key}>\n                        {JSON.stringify(val)}\n                    </Descriptions.Item>\n                ))}\n            </Descriptions>\n        )\n    }\n}\n\nfunction ExpandableRender({ data }) {\n    return <ExpandableItem data={data} contentStyle={{ backgroundColor: '#fff' }} size='small' />\n}\n\nfunction ErrorPanel({ actionItems }) {\n    const dataSource = useMemo(() => {\n        return actionItems.map((item, i) => {\n            const { type, category, data, level, time } = item\n\n            return {\n                key: i,\n                type,\n                category,\n                level,\n                time: format(time, 'yyyy-MM-dd HH:mm:ss'),\n                data,\n            }\n        })\n    }, [actionItems])\n\n    return (\n        <Content className='flex flex-col w-full h-full '>\n            <Header className='flex items-center text-white text-2xl bg-blue-200 shadow-sm'>Action List</Header>\n            <div className='flex-1 overflow-auto'>\n                <Table\n                    pagination={false}\n                    columns={columns}\n                    dataSource={dataSource}\n                    sticky\n                    expandable={{\n                        expandedRowRender: (record) => <ExpandableRender {...record} />,\n                    }}\n                />\n            </div>\n        </Content>\n    )\n}\n\nexport default connect(({ error }) => {\n    const { actionItems } = error\n    return { actionItems }\n})(ErrorPanel)\n","import './index.less'\nimport React from 'react'\nimport { Layout } from 'antd'\nimport SplitPane from 'react-split-pane'\nimport PerformancePanel from './components/PerformancePanel'\nimport ErrorPanel from './components/ErrorPanel'\n\nconst { Header, Content } = Layout\n\nfunction Main({ children }) {\n    return (\n        <Layout className='flex flex-col h-screen'>\n            <Header className='flex items-center justify-between  h-16 px-5 text-2xl text-red-50 bg-blue-300 shadow-xl'>\n                <div>Monitor</div>\n                <a href='https://github.com/clouDr-f2e/monitor' target='_blank' rel='noreferrer'>\n                    <i className='icon iconfont icon-github-fill text-3xl text-white' />\n                </a>\n            </Header>\n            <Layout className='relative flex flex-1 split-wrapper'>\n                <SplitPane split='vertical' minSize={200} defaultSize={'40%'}>\n                    <Content className='h-full rounded-l-md bg-white split-wrapper'>\n                        <SplitPane\n                            split='horizontal'\n                            minSize={300}\n                            maxSize={600}\n                            defaultSize={'50%'}\n                            pane2Style={{ overflow: 'hidden' }}\n                        >\n                            <PerformancePanel />\n                            <ErrorPanel />\n                        </SplitPane>\n                    </Content>\n                    <Content className='flex flex-col h-full rounded-r-md bg-white'>{children}</Content>\n                </SplitPane>\n            </Layout>\n        </Layout>\n    )\n}\n\nexport default Main\n","import { useEffect, useCallback, useRef, useState } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport cls from 'classnames'\nimport routes from 'src/router/routes'\n\nfunction Navigation() {\n    const wrapRef = useRef(null)\n    const barRefs = useRef([])\n    const history = useHistory()\n    const location = useLocation()\n    const [barStyle, setBarStyle] = useState({})\n\n    const handleNavi = useCallback(\n        (route) => {\n            history.push(route.path)\n        },\n        [history]\n    )\n\n    useEffect(() => {\n        if (wrapRef.current) {\n            const wrapOffsetX = wrapRef.current.getBoundingClientRect().x\n            const activeTab = barRefs.current.find((tab) => tab.id === location.pathname)\n            if (activeTab) {\n                const deltaX = activeTab.getBoundingClientRect().x - wrapOffsetX\n                setBarStyle({ width: activeTab.clientWidth + 'px', transform: `translate3d(${deltaX}px,0px,0px)` })\n            }\n        }\n    }, [location.pathname])\n\n    return (\n        <div className='relative flex items-center h-16 shadow-sm' ref={wrapRef}>\n            {routes.map((route, i) => (\n                <div\n                    ref={(el) => (barRefs.current[i] = el)}\n                    id={route.path}\n                    className={cls(\n                        'px-3 py-2',\n                        'text-xl',\n                        {\n                            'text-blue-300': location.pathname === route.path,\n                            'text-gray-800': location.pathname !== route.path,\n                        },\n                        'cursor-pointer',\n                        'hover:text-blue-300'\n                    )}\n                    key={route.path}\n                    onClick={() => handleNavi(route)}\n                >\n                    {route.title}\n                </div>\n            ))}\n            <div\n                className='absolute z-10 left-0 bottom-0 h-0.5 bg-blue-300 transition-transform transition-all duration-200 ease-linear'\n                style={barStyle}\n            />\n            <div className='absolute left-0 bottom-0 w-full h-px bg-bg-gray-10' />\n        </div>\n    )\n}\n\nexport default Navigation\n","import routes from './routes'\nimport { Router, Switch, Route } from 'react-router'\nimport Main from 'src/layout'\nimport Navigation from 'src/layout/components/Navigation'\n\nfunction AppRouter({ history }) {\n    return (\n        <>\n            <Main>\n                <Router history={history}>\n                    <Navigation />\n                    <Switch>\n                        {routes.map((route) => (\n                            <Route key={route.path} {...route} />\n                        ))}\n                        <Route component={() => <div>404</div>} />\n                    </Switch>\n                </Router>\n            </Main>\n        </>\n    )\n}\n\nexport default AppRouter\n","import metricsConfig from 'src/constants/performance'\n\nconst performance = {\n    namespace: 'performance',\n    state: {\n        metricsItems: [],\n        scores: [],\n    },\n    reducers: {\n        addMetrics(state, { payload }) {\n            return {\n                ...state,\n                metricsItems: state.metricsItems.concat(payload),\n            }\n        },\n        calcScore(state, { payload }) {\n            const { name, value, score } = payload\n\n            const time = typeof value !== 'number' ? value.time : value\n\n            const { weight } = metricsConfig[name?.replace(/(-|)([a-z])[a-z]*/g, '$2')]\n\n            return {\n                ...state,\n                scores: state.scores.concat({\n                    title: name,\n                    score: score.toFixed(2),\n                    value: time.toFixed(2),\n                    weight,\n                    key: name,\n                }),\n            }\n        },\n    },\n    effects: {},\n}\n\nexport default performance\n","const error = {\n    namespace: 'error',\n    state: {\n        actionItems: [],\n    },\n    reducers: {\n        addItem(state, { payload }) {\n            return {\n                actionItems: state.actionItems.concat(payload),\n            }\n        },\n    },\n}\n\nexport default error\n","import dva from 'dva'\nimport { createHashHistory } from 'history'\nimport './App.less'\nimport AppRouter from 'src/router'\nimport * as models from 'src/models'\n\nconst app = dva({\n    history: createHashHistory(),\n})\n\nfor (let modelsKey in models) {\n    app.model(models[modelsKey])\n}\n\napp.router(AppRouter)\n\nconst App = app.start()\n\nexport default App\n\nexport { app }\n"],"sourceRoot":""}