{"version":3,"sources":["components/PageHeader/index.js","hoc/baseContent.js","utils/request.js","utils/fetch.js","pages/error/index.js"],"names":["PageHeader","title","className","type","withBaseContent","Component","props","service","axios","create","request","get","url","config","post","data","fetch","then","res","json","Content","Layout","ErrorTypeData","action","app","_history","push","message","success","content","r","catch","e","error","Error","Promise","resolve","ItemRender","onClick","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","renderItem","item","Item"],"mappings":"oHAAA,qBAWeA,IATf,YAAgC,IAAVC,EAAS,EAATA,MAClB,OACI,qCACI,qBAAKC,UAAU,yBAAf,SAAyCD,IACzC,cAAC,IAAD,CAASE,KAAK,oB,qDCEXC,IARS,SAACC,GACrB,OAAO,SAACC,GAAD,OACH,qBAAKJ,UAAU,2BAAf,SACI,cAACG,EAAD,eAAeC,S,iCCH3B,aAEMC,EAFN,OAEgBC,EAAMC,SAEhBC,EAAU,CACZC,IADY,SACRC,EAAKC,GACL,OAAON,EAAQI,IAAIC,EAAKC,IAE5BC,KAJY,SAIPF,EAAKG,EAAMF,GACZ,OAAON,EAAQO,KAAKF,EAAKG,EAAMF,KAIxBH,O,mICPAA,EANC,CACZC,IAAK,SAACC,GACF,OAAOI,MAAMJ,GAAKK,MAAK,SAACC,GAAD,OAASA,EAAIC,Y,QCKpCC,EAAYC,IAAZD,QAEFE,EAAgB,CAClB,CACIrB,MAAO,2BACPsB,OAAQ,kBAAMC,IAAIC,SAASC,KAAK,OAEpC,CACIzB,MAAO,8BACPsB,OAAQ,WACJb,IAAQC,IAAI,iDAAiDM,MAAK,SAACF,GAC/DY,IAAQC,QAAQ,CAAEC,QAAS,kBAAmB3B,UAAW,oBAAqBe,MAAK,SAACa,YAIhG,CACI7B,MAAO,mCACPsB,OAAQ,WACJb,IAAQC,IAAI,kDAAkDoB,OAAM,SAACC,GACjEL,IAAQM,MAAM,CAAEJ,QAAS,gBAAiB3B,UAAW,oBAAqBe,MAAK,SAACa,YAI5F,CACI7B,MAAO,gCACPsB,OAAQ,WACJP,EAAML,IAAI,2BAA2BM,MAAK,SAACa,GACvCH,IAAQC,QAAQ,CAAEC,QAAS,gBAAiB3B,UAAW,oBAAqBe,MAAK,SAACa,YAI9F,CACI7B,MAAO,qCACPsB,OAAQ,WACJP,EAAML,IAAI,kDAAkDoB,OAAM,SAACD,GAC/DH,IAAQM,MAAM,CAAEJ,QAAS,cAAe3B,UAAW,oBAAqBe,MAAK,SAACa,YAI1F,CACI7B,MAAO,uBACPsB,OAAQ,WACJ,MAAM,IAAIW,EAAM,cAGxB,CACIjC,MAAO,iCACPsB,OAAQ,WACJ,OAAO,IAAIY,SAAQ,SAACC,GAChBA,EAAQ,aACTnB,MAAK,WACJ,MAAM,IAAIiB,EAAM,eAI5B,CACIjC,MAAO,uCACPsB,OAAQ,WACJI,IAAQC,QAAQ,CAAEC,QAAS,cAAe3B,UAAW,oBAAqBe,MAAK,SAACa,UAK5F,SAASO,EAAT,GAAwC,IAAlBpC,EAAiB,EAAjBA,MAAOsB,EAAU,EAAVA,OACzB,OACI,cAAC,IAAD,CAAMtB,MAAOA,EAAb,SACI,cAAC,IAAD,CAAQE,KAAK,UAAUmC,QAASf,EAAhC,0BAOZ,SAASW,IACL,OACI,eAACd,EAAD,CAASlB,UAAU,gBAAnB,UACI,cAACF,EAAA,EAAD,CAAYC,MAAM,UAClB,cAAC,IAAD,CACIsC,KAAM,CACFC,OAAQ,GACRC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,IAAK,GAETC,WAAYzB,EACZ0B,WAAY,SAACC,GAAD,OACR,cAAC,IAAKC,KAAN,UACI,cAACb,EAAD,eAAgBY,YAQzB7C,sBAAgB8B","file":"static/js/p_error.b305bc0e.chunk.js","sourcesContent":["import { Divider } from 'antd'\n\nfunction PageHeader({ title }) {\n    return (\n        <>\n            <div className='text-3xl font-semibold'>{title}</div>\n            <Divider type='horizontal' />\n        </>\n    )\n}\n\nexport default PageHeader\n","const withBaseContent = (Component) => {\n    return (props) => (\n        <div className='flex-1 p-5 overflow-auto'>\n            <Component {...props} />\n        </div>\n    )\n}\n\nexport default withBaseContent\n","import axios from 'axios'\n\nconst service = axios.create()\n\nconst request = {\n    get(url, config) {\n        return service.get(url, config)\n    },\n    post(url, data, config) {\n        return service.post(url, data, config)\n    },\n}\n\nexport default request\n","const request = {\n    get: (url) => {\n        return fetch(url).then((res) => res.json())\n    },\n}\n\nexport default request\n","import { Layout, List, Card, Button, message } from 'antd'\nimport PageHeader from 'src/components/PageHeader'\nimport withBaseContent from 'src/hoc/baseContent'\nimport { app } from 'src/App'\nimport request from 'src/utils/request'\nimport fetch from 'src/utils/fetch'\n\nconst { Content } = Layout\n\nconst ErrorTypeData = [\n    {\n        title: '跳转页面',\n        action: () => app._history.push('/'),\n    },\n    {\n        title: '触发Xhr请求',\n        action: () => {\n            request.get('http://blingtron.chryseis.cn/performance.json').then((data) => {\n                message.success({ content: 'request success', className: 'monitor-message' }).then((r) => {})\n            })\n        },\n    },\n    {\n        title: '触发Xhr请求Error',\n        action: () => {\n            request.get('https://blingtron.chryseis.cn/performance.json').catch((e) => {\n                message.error({ content: 'request error', className: 'monitor-message' }).then((r) => {})\n            })\n        },\n    },\n    {\n        title: '触发Fetch请求',\n        action: () => {\n            fetch.get('./data/performance.json').then((r) => {\n                message.success({ content: 'fetch success', className: 'monitor-message' }).then((r) => {})\n            })\n        },\n    },\n    {\n        title: '触发Fetch请求Error',\n        action: () => {\n            fetch.get('https://blingtron.chryseis.cn/performance.json').catch((r) => {\n                message.error({ content: 'fetch error', className: 'monitor-message' }).then((r) => {})\n            })\n        },\n    },\n    {\n        title: '触发Js Error',\n        action: () => {\n            throw new Error('js error')\n        },\n    },\n    {\n        title: '触发unhandledrejection',\n        action: () => {\n            return new Promise((resolve) => {\n                resolve('reject')\n            }).then(() => {\n                throw new Error('reject')\n            })\n        },\n    },\n    {\n        title: '触发用户事件',\n        action: () => {\n            message.success({ content: 'hello world', className: 'monitor-message' }).then((r) => {})\n        },\n    },\n]\n\nfunction ItemRender({ title, action }) {\n    return (\n        <Card title={title}>\n            <Button type='primary' onClick={action}>\n                have a try\n            </Button>\n        </Card>\n    )\n}\n\nfunction Error() {\n    return (\n        <Content className='overflow-auto'>\n            <PageHeader title='Error' />\n            <List\n                grid={{\n                    gutter: 16,\n                    xs: 1,\n                    sm: 2,\n                    md: 2,\n                    lg: 2,\n                    xl: 3,\n                    xxl: 3,\n                }}\n                dataSource={ErrorTypeData}\n                renderItem={(item) => (\n                    <List.Item>\n                        <ItemRender {...item} />\n                    </List.Item>\n                )}\n            />\n        </Content>\n    )\n}\n\nexport default withBaseContent(Error)\n"],"sourceRoot":""}